# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: Build and Deploy to Container App

on:
  workflow_dispatch:

jobs:
  build:
    name: Build and Test Solution
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Set up .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Restore dependencies
      run: dotnet restore

    - name: Build with dotnet
      run: dotnet build --configuration Release
      
    - name: Login to Azure
      run: az login --service-principal --username ${{ secrets.SERVICE_PRINCIPAL }} --password ${{ secrets.SERVICE_PRINCIPAL_PASSWORD }} --tenant ${{ secrets.TENANT }}
      
    - name: Get Latest Container Image Tag
      id: get_tag
      run: |
        TAG=$(az acr repository show-tags --name crmicrohackjliu0922 --repository microhackapp --orderby time_desc --output tsv --detail | head -n 1 | awk '{print $4}') 
        NUMERIC_TAG=$(echo "$TAG" | grep -oE '[0-9]+') 
        INCREMENTED_TAG=$((NUMERIC_TAG + 1)) 
        UPDATED_TAG=$(echo "$TAG" | sed "s/$NUMERIC_TAG/$INCREMENTED_TAG/") 
        echo "::set-output name=image_tag::$UPDATED_TAG"

    - name: Build and Push Image
      run: |
        echo "${{ secrets.ACR_PASSWORD }}" | docker login -u "${{ secrets.ACR_USERNAME }}" --password-stdin crmicrohackjliu0922.azurecr.io &&
        docker build -t crmicrohackjliu0922.azurecr.io/microhackapp:${{ steps.get_tag.outputs.image_tag }} -f Dockerfile . &&
        docker push crmicrohackjliu0922.azurecr.io/microhackapp:${{ steps.get_tag.outputs.image_tag }}

    - name: Deploy to Container App
      uses: azure/container-apps-deploy-action@v2
      with:
        imageToDeploy: crmicrohackjliu0922.azurecr.io/microhackapp:${{ steps.get_tag.outputs.image_tag }}
        acrUsername: ${{ secrets.ACR_USERNAME }}
        acrPassword: ${{ secrets.ACR_PASSWORD }}
        resourceGroup: AzureBackupRG_eastus_1
        containerAppEnvironment: microhack-containerappenvironment
        containerAppName: microhack-containerapp
        targetPort: 80
